%\section{About this document}

This document is a literate program~\cite{wp-literate-programming}. It
is generated from a set of files that can be processed by tools
(Noweb~\cite{noweb} and syncweb~\cite{syncweb}) to generate either
this manual or the actual source code of the program. Thus the code and
its documentation are strongly connected.

%still? speak about FACEBOOK: special marks ?

\t what is wrong with Javadoc or omcaldoc in our case ?
% I dont like it, cf sexp_int.mli, too many functions, given equal
% importance. Of course could reorder, but then that's the point, 
% you want to reorder => use LP. Moreover 2 views will always be better
% than just one view.

% speak more to explain LP for layman, with the chunks,
% possible multiple >>= on the same chunkname, etc.

% speak about type annotations? (// enum<...> )
%  paper: how infer those annotations!
% speak about context annotations (... -> <>), nice DSL :)
%  paper: how infer those annotations! context is super important to
%  help understand code (focus and context! classic)

% good side effect of LP, can more clearly show when things
% are independent, e.g. when aggregate in the "initialisaton" chunk,
% that means all initialisation are independent. If there is an order
% we would use another chunk and explicitly sequence them.

%paper: how auto generate those literate documents! Big project.
% see also plan-xix.org#Publish
