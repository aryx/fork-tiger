/* Eratosthene's sieve
   Compute prime numbers less than N=1000
   Try me with colmajor:
     ./sieve.exe | ./colmajor.exe
 */

let

type int_array = array of int
var size := 1000
var sieved := int_array[size] of 0

function mod(n : int, m : int) : int = n - m * (n / m)

function mark_multiples(n : int) =
  let var i := n in
    while i < size do (
      if not(mod(i, n)) then sieved[i] := 1;
      i := i + n
    )
  end

function step(n : int) =
  if not(sieved[n]) then (
    printi(n); print("\n");
    mark_multiples(n)
  )

in
  for i := 2 to (size - 1) do step(i)
end
